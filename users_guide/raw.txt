OpenKM 手冊
目  錄
A.1	OpenKM	3
A.1.1	一般使用者說明	3
一、	登入登出	3
二、	桌面、文件搜索、個人看板	5
三、	節點(文件夾、文件、郵件、訊息)之增減、上下載	10
四、	編輯與搜索	13
五、	檢視(Preview)功能	14
A.1.2	KM的理念與策略	15
一、	KM不是什麼？	15
二、	KM是什麼?	17
A.1.3	管理者權限功能	17
一、	安裝	17
二、	Mysql的管理	19
三、	JBOSS的安裝	19
四、	系統資源管理	20
五、	批次新增或修改使用者設定	21
六、	批次上、下載	23
七、	okmdb之外部存取	24
八、	OpenKM的定期作業	27
A.2	Glossary	29

 
表目錄
找不到圖表目錄。

 
OpenKM 手冊
A.1	OpenKM
OpenKM可以說擁有KMS領域的最大open source社群 ，其他KMS或有免費版本，但並未提供程式碼，OpenKM的社群版本雖然也提供了專業版和雲端版，但是廠商還是鼓勵社群可以就其程式碼自行修改，以滿足使用者的需求，並且在此歷程提供必要的協助。
OpenKM與其他KMS的比較，可以參考wiki 或網友 的介紹。
A.1.1	一般使用者說明
使用手冊除了官網 之外，亦有泰國機關所摘寫的英文版手冊(OKM6.4) 
一、	登入登出
(一)	開啟瀏覽器(chrome/firefox/IE/safari等)
1.	網址: http://200.200.121.74:8080/OpenKM
2.	或網址: http://200.200.12.191:8080/OpenKM
說明：
(1)	開頭200.200.XXX.XXX均為「內部」網站，與公司資訊安全之管理(檔案進出公司防火牆)「無關」下載後送出公司外部時、或由外部獲得資料上載到KM，進出公司之際還是必須遵守公司資安設定。
(2)	12.191(master)為備份、屬試驗性質，必要時才開放，請勿存放文件。
(二)	使用者帳密
1.	名稱:員工編號(4碼)，曠博的使用者名稱就是4139
2.	密碼:email的帳號(@左方之名稱)加上員編，例如曠博的密碼就先設成:yckuang4139。登入後在「工具」「選項」中修改。
3.	「第一次」瀏覽器會詢問是否儲存密碼：
如果是個人桌機，此處強列建議儲存密碼，會省事很多。
如果瀏覽器不能儲存密碼，可能原因：
(1)	瀏覽器設定為對所有網站、永不儲存密碼，或
(2)	瀏覽器設定對特定網站不儲存密碼(第一次詢問時答否，瀏覽器就會被設定永不儲存該一網站的密碼)，
必須進入瀏覽器的「設定」中將儲存密碼打開，或在永不儲存特定網站處，將本網站排除。
4.	修改密碼：
進入系統後在「工具」(Tools)→「選項」(Preferences)→「用戶配置」，可更改個人密碼、信箱(下述)等設定。
唯「角色」是管理者權限，被分配到某一(些)群組須由管理者來修改。
(三)	語言：有4種可以選，選英文好像中文字也會顯示，只有在進行翻譯是才會有差別。
(四)	按下Login鍵之後就可以登入了。
   
(五)	刷新(refresh)：
由於系統對設定、目錄檔案的增刪有可能會有些時間差落後，因此系統提供了「文件」→刷新，以及「桌面」「個人看板」上方有小工具「刷新」。
按下瀏覽器的「重新整理」系統也會重新載入設定，但「不會」登出，要登出還是要按照下列步驟。
(六)	登出
1.	關閉網頁即可、或由File(文件)→Exit(退出)→Accept(接受)
2.	開著網頁沒有存取，OpenKM紀錄是有差別的，所以不必擔心掛網有什麼後果。
3.	重覆登入：
同一使用者在同一IP或不同IP重覆登入，好像沒有什麼特別的問題，系統會按時間自動更新。只要電腦的時鐘保持正確。
同一IP不同使用者登入：系統不允許，2使用者都會強制登出。
(七)	其他：可詳見 
二、	桌面、文件搜索、個人看板
	畫面第一行為主功能表，可以逛一下，Bookmarks會記錄看過文件的位置，Templates功能未開放。
	第二行左側為小工具，開目錄、上傳檔案等等
	第二行右側有3個頁面(tab)，Desktop(桌面)、Search(進階搜尋)、Dashboard(個人看板)，可以自由切換。
(一)	「桌面」
包括左側目錄架構、檔案列表、檔案內容(Preview)等介面。
   
 
1.	檔案架構(「桌面」左側)
(1)	「公共文件」(Taxonomy知識分類學)：按檔案內容的知識屬性分類 
	建議至少按照Sinotech KM分法，以承接其內容，有必要則另創。
	Sinotech KM分法：污水處理廠、污水管線工程 、自來水工程 、水污染整治 、環境影響評估及監測 、噪音污染評估防制及設計 、空氣污染防制及健康風險 、溫減碳排等
(2)	「自定義分類」(categories)
	可自創檔案夾，不能新增檔案，只能連結。
	按屬性、可跨組、共通性的檔案放在這裡。
	「新建資料夾」→到「我的文件」選取文件→按右鍵「加以自定義分類」→選取該資料夾。類似公開筆記或個人書架的概念。
(3)	「詮釋資料」(metadata)將檔案予以評等、分級之後，將在此處彙整。可視為經評鑑後的檔案。
(4)	「詞典」(Thesaurus同義詞，用來提供關鍵詞選擇用)
(5)	「樣板」(Template功能未知)
(6)	「我的文件」存放個人文件的地方，除了ROLE_ADMIN之外，即使開放別人也讀不到，必須複製到公共空間。
(7)	電子郵件
電子郵件的設定在「工具」→「選項」→「用戶配置」，範例：
i.	master /sino4都具有寄信功能
(i)	mail server: mail.sinotech.com.tw
(ii)	Mail user name:openkm
(iii)	Mail user password:yck4139
(iv)	Mail folder:/var/spool/mail
ii.	mail.sinotech.com.tw(mail.sinotech-eng.com或imap.gmail.com)(如下圖)
(i)	mail server: mail.sinotech.com.tw
(ii)	Mail user name:yckuang
(iii)	Mail user password:***** (在申請email帳號時設定的密碼)
(iv)	Mail folder:Inbox
經測試必須「Mail configuration OK」
 
雖然OpenKM也具有強大的電子郵件管理功能，但為避免與目前既有outlook系統衝突，不建議設定OpenKM具有收信功能，管理者要記得在configure→crontab停用每小時import郵件之設定。因此在桌面個人電子郵件目錄下的內容，應該是保持淨空的。
(8)	「垃圾桶」在File(文件)下可以一次清空
2.	文件列表(「桌面」中上)
(1)	第一行為所在的目錄(非實質目錄)。此處列表包括目錄、檔案、以及郵件，可以分開點選。
(2)	其次漏斗為篩選「過濾」，可以設定名稱、大小、日期、作者、版本等進行篩選。
(3)	分頁與否，以及排序(反轉)，須在此設定，按表頭並不會作用。
(4)	勾選同批處理，也可以按detail圖案全選。
(5)	增加屬性(metadata)：針對文件或目錄的評等。按詮釋資料中的定義來勾選。
3.	文件屬性~預覽(「桌面」中下)
(1)	屬性頁面，創建者必須自己加入「關鍵字」，好讓系統可以更快搜索。也可以加入「自定義分類」編輯個人專輯，方便別人查找。
(2)	備註：可以加入個人的見解、評論、等。不必特別加註人名、時間，系統會自行加入。
(3)	文件權限：可以指定個別使用者或群組(角色)，可以讀、寫之權限。
(4)	版本：如開放編輯，將會記錄文件編修的過程
(5)	預覽：詳見下述
(二)	「文件搜索」
OpenKM的搜索包括檔名、全文。
進入OpenKM後，如果知道檔案在「公共文件」哪個架構位置，可以由「桌面」左側目錄下手循序點選，如果不知道，可以由左方望遠鏡下手，搜尋關鍵字、內容、檔案名、人名或其他
「桌面」公共文件工具列中的望遠鏡，為目錄及檔名搜索。可以在對話窗輸入查找，或先在文件列表中點選某一檔案，查找類似檔案。只有在「公共文件」中的檔案、目錄才可以被找得到。自定義分類中的文件，雖然別的使用者也看得到，但不能查找。
全文查找可以在右方的放大鏡旁，或者在「文件搜索」中進行。搜索結果將出現在下方。
搜索結果可以儲存在左側(保存)或用戶消息中，後者將出現在個人看板。
搜索細節將在下面詳述。
(三)	「個人面板」
共有6個頁面：
1.	個人用戶：鎖定、正編輯修改過、最近下載上傳、訂閱的文件或資料夾。
2.	郵件：由於未開啟收信功能，此處無作用。
3.	查詢訊息：前述「文件搜索」的結果，儲存之後將會在此列表，讀過會取消黑體，數字減少。
4.	公共信息：系統推薦最近被看過最多次的文件，修改最多的文件等等。
5.	工作流程：類似傳遞單功能。
6.	關鍵字集：目前關鍵字檔案的多寡、排序，可做整理。
 
三、	節點(文件夾、文件、郵件、訊息)之增減、上下載
(一)	新建/刪除目錄：
使用者可以在「公共文件」「自定義分類」與個人空間具有寫入權限處，創建新的目錄或刪除，並管理對哪些角色或使用者個人開啟權限。
個人空間不論權限如何設定，其他非管理者個人無法讀取。
(二)	上載：
1.	檔案必須有所歸屬，因此必須先點選目錄，再按新增文件(Add document)，
2.	按左側選擇檔案鍵，會開啟window的檔案總管介面，選好檔案後右側會出現檔名，再按Upload即可。(如圖)
   
3.	如果要再在同一目錄增加檔案，可以在同畫面繼續進行。
4.	「通知用戶」notify to user
此一通知有廣播的作用，可以將檔案的基本介紹寫在message(通知消息)框架內，選擇使用者、或者群組(角色)，上載的同時就會通知其他人上來看檔案。
選擇時要注意是否有勾選「過濾」，如果勾選了，將無名單顯示，須先取消「過濾」才能選擇。
如果方向鍵不能作用，試看看不同方向。
由於sino4沒有收信的功能，也不會留存寄件備份，可以在external mail address寫下自己的email，這樣OpenKM也會寄一份通知給自己做為備份。
由於通知消息的格式語法是html格式，換行必須加註<br>，段落設定則為<p>…</p>。
5.	注意：
	linux OpenKM CE版跨window沒有拉放功能，
	非管理者沒有批次上傳功能，批次上下載詳後述。
	ZIP上傳可以有批次上傳的效果，但只接受ZIP內英文檔名

 

(三)	下載
點選要下載的檔案，按滑鼠右鍵Download即可下載到window個人的Download(下載) 目錄。
目前OpenKM_CE版還沒有「只允許讀取」卻不能「下載」功能，因此如果有檔案不允許別人下載，建議連讀取都不必開放。
四、	編輯與搜索
(一)	編輯檔案
	雙擊並非下載，應為開啟編輯。
	選擇編輯會出現紙張和鉛筆，別人即無法修改，並會在個人面板及下方出現編輯檔案數字。
	雙擊後即會下載到個人電腦的「下載」目錄。修改完後，點選檔案右鍵選更新Update，同樣進入上載畫面，留下註解，將會覆蓋原來檔案。
(二)	搜尋功能
全文搜索可以在右方放大鏡中執行，也可以在「文件搜索」頁面中進行進階搜索。
「文件搜索」頁面右上方選擇搜尋與結果顯示的方式，中間則是搜尋的條件，有基本、進階、與詮釋資料搜尋等。
「文件搜索」頁面右下方為搜索結果，找到檔案之後，點選訂閱(subscribe)就會在個人看板中出現了。
也可以將滑鼠移到檔名底線，會出現檔案所在的目錄歸屬，單擊則會進入該目錄。點選檔案名稱，會進入「桌面」可以點選預覽畫面。
搜索結果儲存的方式有2種，如果特別勾選「作為用戶信息保存」填寫名稱後，點選「保存搜索」就會存到左側。下次進入後，點選該名稱後，就會出現過去搜索的結果，同時也會出現在「個人看板」上。如果沒有勾選「作為用戶信息保存」，就只會出現在左側上方。
 
五、	檢視(Preview)功能
(一)	「桌面」點選檔案後，在下方的Property等頁面最右方頁面，可開啟「文件預覽」。
(二)	調整畫面大小：可以拉邊框，或點選「畫面分割調整」Splitter resize小工具→「展開屬性」Expand properties會放到最大
(三)	大綱或多頁瀏覽
若需要在文件中點選大綱或多頁瀏覽，可以按左方的「切換側邊欄(文件包含大綱或附件)」可以快速翻頁。
檔案最前面有整理好的目錄，系統才會有大綱模式可供瀏覽。
(四)	「在文件中尋找」按左右箭頭可尋找上一筆或下一筆，右方是總數，不會出現目前找到的是第幾個，自行由捲軸相對位置判斷。
   
(五)	簡報模式：去邊、去小工具，為整頁模式，適合橫式之檔案，直式會太小。
(六)	「目前檢視的內容」：將檢視檔案另以瀏覽器分頁展示，
IE有些.pdf中的圖檔無法顯示。
A.1.2	KM的理念與策略
一、	KM不是什麼？
(一)	KM不是永久儲存檔案的地方
1.	如果是重要計畫成果，還是要儲存在公司Y槽、O槽，會有定期備份。
2.	如果KM不太常搜尋的檔案，又有永久保存的必要，會移到Y槽、O槽永久保存。
3.	KM不會取代永久保存檔案的搜尋系統
(二)	KM不是另一個存放個人檔案的地方
1.	KM不是個人筆記軟體
2.	雖然OpenKM有個人專區，有My Documents，但那是指個人貢獻、其他人也有興趣、必須經常更新、又經常查閱的文件，不能取代個人電腦上的My Documents。個人作業仍然鼓勵在個人電腦存放，一定成果之後再提交到KM或Y槽、O槽，以避免版本錯誤。
3.	如果個人文件很久沒有人查閱或更新，或者有興趣查閱的還只是原來的提供者，會定期檢討並建議從KM中移除。
4.	如果個人文件有長久保存的必要，可以在放在Y槽、O槽Users目錄下永久保存，適用公司Y槽、O槽的管理辦法。
(三)	KM不是另一個協同作業平台
1.	如果計畫性質的協同作業，請以原有方式進行。KM將不會進行此類作業的追蹤、分析、監督作業。
2.	如果是訓練性質、無法歸併在單一計畫、方法學上的協同作業，共同編輯，意見交流等，歡迎在OpenKM上進行。
(四)	KM不是另一個Google搜尋引擎
1.	KM只會搜尋使用者上傳的內容，如果使用者沒有上傳，或者上傳的資料沒有參考價值、沒有人負責更新版本，KM就毫無作用。
2.	有些資料不方便存放在外界(google docs、google cloud、或者是dropbox等)，如公司內部訓練、工程問題檢討、proposal簡報，那當然優先要從KM來找。
3.	目前OpenKM的中文搜尋能力還遠遠落後google，中文的片詞會變成單個字搜尋，所以請忍耐調適，長一點詞句(如完整的檔名)會找得比較快一點。
(五)	KM不會取代公司的教育訓練資訊管理體系
1.	公司要求要提交簡報書面、簽到紀錄、甚至有的也會錄音錄影，此處的KM並不是要取代公司的存檔系統，相關的要求還是要照辦。
2.	但是目前公中興司還沒有提供教育訓練的歷史資料在SinotechKM Portal( http://pmis03:8021/KM/KM_Portal/)讓同仁查閱，參加名單也沒有數位化進入管考，因此有必要建置並營運我們自己的系統。
3.	教育訓練成效如果沒有檢討、監督的機制，就形同虛度光陰，因此發展OpenKM有其必要，為短期應急之用。
(六)	OpenKM不會取代SinotechKM
1.	目前2家公司的員編能否通行無阻還有待努力，只有(老)中興員工可以閱覽。同時因人員分散2處，更新速度太慢。
2.	SinotechKM沒有開放全文搜索、Preview沒有大綱瀏覽、無法跨頁瀏覽、沒有選取複製功能、也沒有呈現管理數據，這些都是OpenKM可以協助的地方。
3.	未來2個系統的檔案內容可以保持(定期)同步更新，管理則分開2公司自行管理，以利2方人員的查詢。
二、	KM是什麼?
(一)	具有管理、反省能力的知識文件存、取空間
(二)	知識社群獨立且自主發展的平台空間
(三)	OpenKM具有開放原始碼、低成本、快成效、完整功能、支援足夠、不斷更新、獨立帳號系統等特性  
(四)	整合性高(MIME檔案格式、硬體平台、同步更新、email自動處理)
(五)	查詢功能強大(專業新知分享與查找)
(六)	協同作業(適用技術交流簡報的修改)、自動作業(適用法令規章的更新)、定期作業(適用下載Sinotech KM內容)
A.1.3	管理者權限功能
一、	安裝
(一)	OpenKM主程式
OpenKM[官網](https://docs.openkm.com/kcenter/view/okm-6.3-com/installing-on-redhat-and-centos.html) 有詳細的安裝過程說明，還有其他周邊軟體的安裝或設定，注意事項：
1.	磁碟機空間：由於OpenKM系統內不能局部選擇磁碟機存取位置，因此必須事先將$TOMCAT_HOME/repository放在足夠大的磁碟機，以免事後搬遷(可以由Administration→statistic看到系統資源使用的情況，詳下述)。
2.	Openoffice以及Tesseract的安裝。安裝之後要找到其檔案所在位置，以便在OpenKM裏逐一設定，如Configuration之check。
system.swftools.pdf2swf
OK - /home/openkm/tomcat/bin/pdf2swf
system.imagemagick.convert
OK - /usr/bin/convert
system.ocr
OK - /usr/bin/tesseract
system.openoffice.path
OK - /opt/openoffice4/program/soffice.bin
3.	加入使用者：初始登入okmAdmin(pw:admin)，再增加管理者之使用者帳密。批次增加帳密可參考下述。
4.	有關[中文之介面](http://www.openkm.net/1409.html)：可下載[OpenKM 6 zh-TW.sql](https://www.openkm.com/wiki/index.php/File:OpenKM_6_zh-TW.sql) 後在Configure→default.lang處設定，之後可在Administration→Language處修改局部之翻譯。
5.	有關mail server：OpenKM需要有mail server，因此需要在啟動tomcat時，同時將postfix啟動，(至少)使notify功能能作用。
6.	Window系統上安裝之注意事項
(1)	mysql版本
雖然官網有介入MySQL8版本的注意及修改事項，但經測試結果發現，java(新版connector/J)並不能連結上資料庫平台，還是安裝舊版MySQL比較穩定能搭配。因此如果伺服器上有別的mysql運作需求將會遭遇困難，符合伺服器必須是專用(dedicated)之原則。
(2)	okmAdmin登入後trash目錄無法產生之問題
此問題應為OpenKM.cfg內重複新增(create)hibernate.hbm2ddl所置，將其改為none即可。
(3)	openoffice目錄設定：不需要到”program”(C:\Program Files (x86)\OpenOffice 4)
(4)	tomcat版本與中文顯示
網友曾提及tomcat 8內設字形並非UTF8的問題，並且建議將tomcat.connector.uri.encoding設成UTF-8，然而此舉在centos卻不需要，且無益於中文字的顯示，顯示可能還有其他因素無法正確顯示中文字型。
(二)	Mysql的管理
1.	給定root的密碼：mysqladmin -u root password
2.	給定其他使用者的帳密(說明MySQL如何修改密碼與忘記密碼時如何重設密碼) 
3.	給定特定的socket: --socket="/var/lib/mysql/mysql.sock"
(三)	JBOSS的安裝
JBOSS是早期或window所需的虛擬機器平台(JVM)。由於目前最新的版本(boss-as-7.1.1.Final)
ScaleBuz, WHAT IS JBOSS AND HOW TO INSTALL JBOSS ON CENTOS 6 ? https://scalebuzz.com/what-is-jboss-and-how-to-install-jboss-on-centos-6/ 與java8並不相容，必須使用較早版本。安裝過程也可以參考OpenKM早期版本的介紹Configure JBoss service, https://www.openkm.com/wiki/index.php/Configure_JBoss_service 。
可以由redhat官網下載(須註冊https://developers.redhat.com/products/eap/download)後，按照7.1版方式安裝即可。
由於OpenKM已經佔用了8080的端口，因此要在standalone.xml檔(/opt/jboss-eap-6.3/bin/standalone/configuration/standalone.xml)中將8080改成其他端口。同時也要注意將127.0.0.1改成intra net IP位址。
啟動前後，要記得加入使用者帳密。JBOSS要求的密碼必須是8碼，同時要求至少一碼非英數，要特別注意。
二、	公共空間權限與內容的管理
不論是哪一層角色或群組，使用者存取檔案等各項動作均有紀錄可供追蹤。
(一)	有關「管理者」
「管理者」administrator有最大的權限，甚至包括個人空間。如果有資料是不願意讓管理者看到、處理的，請不要出現在KM。
有關使用者增、刪、群組角色增刪、群組設定(指派)，檔案的批次上(下)載等系統內作業，都必須是「管理者」。
(二)	有關ROLE_USER可以瀏覽(下載)之內容
ROLE_USER看來是最低的權限，但不能刪除，因為登入者必須都有一個ROLE_USER群組(As is explained in wiki and in some forum post, all users must have UserRole ( mandatory ) is a role for connection that must not be propagated to repository because all users have it. It's administrator job to change default okm:root security configuration for it purpose and add there new roles, https://forum.openkm.com/viewtopic.php?t=4024)，可以看待為訪客。意謂在okm:root根目錄，必須要開放ROLE_USER至少可以讀，KM系統也必須要充實訪客可以參觀的內容，達到「跨領域」交流的目標。至於其他則必須設為限制瀏覽，正面表列以下建議： 
1.	sinotech KM(可下載)的內容
2.	跨部門會需要查找的重要專業訊息：重要計畫環評報告、環境品質年報、氣象年報、新聞剪影等、研討會報告
3.	對公司內各部門開放之專題演講或課程
4.	同仁在公司內、外發表之期刊文章、學術演講簡報
5.	有關公司本身的即時資訊：
(1)	公司、部門重要發表、簡介、簡報參考訊息等，(如果有)年度CSR，也可以陳列於此。
(2)	OpenKM官網連結、手冊、基本統計、OpenKM動態資訊等等。
(三)	ROLE_USER限制瀏覽項目建議如下：
1.	計畫成果與半成果：按照現行O槽與Y槽管制架構，跨部門是不能瀏覽的。
(四)	有關部門群組、跨部門專案群組與KM之管理
按照公司制度部門經理轄下有2~3位技術經理不等，各管理專門的技術領域，同樣延續ROLE_USER的管理概念，部門也必須設有每一位成員可以瀏覽的內容、以及各技術組之範疇內容。
部門(department)如ROLE_E1、ROLE_E2、ROLE_WW、ROLE_ER，以2碼約定。技術組(division)如AIR、EIA、WWc(減碳)、WWs(管線)、WWp(廠站)等。
跨部門專案是特例，由計畫經理管理，同樣以下必須設有共同與副經理所轄範疇。建議以計畫編號做為群組代碼。如為跨計畫常設性的研發領域，則直接以專題方式辦理。
部門經理必須管理部門成員可以瀏覽、與限制瀏覽的範疇。
(五)	有關技術群組、專案群組與KM之管理
按照現行制度，技術經理以下管轄4~5位計畫主管(如air1~air5、eia1~eia5)，各有管理計畫1~5個不等。同樣技經也必須率定技術組必須要能看到的範疇，以及各組自行管理的範疇。
(六)	計畫主管層級之管理
為利工作推動，計畫主管必須要求所轄工程師提供重要的技術文件，以供同組其他工程師工作所需。如為可以公開到上層跨組(部)的，經上層主管同意後，以打開上層跨組(部)其他同仁的權限。
三、	系統資源管理
「管理面板」→statistic內容雖然不多，但也都與系統資源的現況與最佳狀況的管理有關。
 
(一)	檔案大小與個數:如有垃圾桶待清空，可以通知該使用者清空垃圾桶。如有個人資料夾過大，同樣提醒其有效管理個人資源。
(二)	系統記憶體使用比例：
如果伺服器開啟太久、無效登入太多，系統記憶體會持續降低，有效提昇的作法，即為定期停止伺服器再開啟即可。
目前已經設定系統在每天同步備份後，重新啟動，以保持記憶體可能在安全範圍。
(三)	Java虛擬(JVM)記憶體容量
(四)	磁碟機空間：如果檔案久未查詢，則將其納入永久保存，此處只要留下摘要、連結、或詮釋資料即可。
四、	批次新增或修改使用者設定
「管理面板」中使用者項目下，按下綠加號即可新增一使用者，但一次只能一筆。論壇中對於批次建使用者的需求多所質疑，因此解法也不多，總之初次建立、由別的系統轉過來、或者是日常使用者管理等情況，都會遇到需要批次建立的問題。
解決的原則就是利用OpenKM的內建程式(Script)來做。
(一)	基本指令 
import com.openkm.api.*;
OKMAuth.getInstance().createUser(null, "3454","sksun3454","sksun@mail.XXX","孫XX", true);
OKMAuth.getInstance().assignRole(null,"3454","ROLE_USER");
OKMAuth.getInstance().deleteUser(null,"3454");
createUser的引數依序是ID、密碼、email、以及名稱。名稱雖然可以接受中文，中文也可以在一般的檔案屬性中順利搜索、運作，但在OpenKM比較高階的管理者介面，其實是無法解析的。如果必要可以刪除，改以英數文字較為穩定。
指定角色(assignRole)分開執行，因為一個使用者可以有很多角色，指定時只要分次、分批疊加上去就可以了。
刪除使用者所需要的引數就只要ID即可。刪除後檔案的作者會有何變化，目前未知。
(二)	產生批次檔
網友介紹以VB在excel內作業，以下為python的範例。不論什麼工具，目標就是將資料表填入程式碼中。
/cluster/miniconda/envs/py37/bin/python
# coding='utf8'
"""this program generate the scripts for OpenKM add_users and assign_roles"""
import os
from pandas import *
from pypinyin import pinyin, lazy_pinyin
#這一段將公司分機查詢之部門員編、email等表格讀入。
#其中也利用了grep的技巧，把資料從複雜的表格中讀出來。
dpt='SEC_EE.html'
dpt='EE1.html'
os.system('grep \>Email '+dpt+' >email.txt')
with open('email.txt', 'r') as f:
  ll = [l for l in f]
email = [l.split('>')[6].split('<')[0] for l in ll]

chr = "'<td style=\"text-align:center\" class=\"ng-binding\">'"
os.system('grep ' + chr + ' '+dpt+' | grep -v "><" | grep -v "環境" | grep -v "理" > emp.txt')
with open('emp.txt', 'r') as f:
  ll = [l for l in f]
empno = [l.split('>')[1].split('<')[0] for l in ll]
df = DataFrame({'empno': empno, 'email': email})

#由於資料管理員(部門行政人員)並不在工程師名單中，因此需要另外加進去。
#此外英文拼音在KM中可以完全解析，而中文名稱則更直接。
dfA = read_csv('../pub_count.csv')
dfA.loc[len(dfA), 'emp'] = '3851'
dfA.loc[dfA.emp == '3851', 'nam'] = 'yangzhenzhen'
name_cn = [list(dfA.loc[dfA.emp == i, 'nam'])[0] for i in df.empno]
name_en = []
for i in name_cn:
  ss = lazy_pinyin(i)
  s = ''
  if len(ss) > 0:
    for j in ss:
      s += j
  name_en.append(s)
df.set_index('empno').to_csv('email.csv')

#產生程式碼、寫出程式檔案
c, n, q = ',', '\n', '"'
imp = 'import com.openkm.api.*;'
user = ['OKMAuth.getInstance().createUser(null, ', ' true);\n']
role = ['OKMAuth.getInstance().assignRole(null,', ');\n']
delu = ['OKMAuth.getInstance().deleteUser(null,', ');\n']
user_id=[q+i+q+c for i in empno]
user_pw=[q+e.split('@')[0]+i+q+c for i,e in zip(empno,email)]
user_em=[q+e+q+c for e in email]
user_nm=[q+e+q+c for e in name_cn]
with open('addusers.bsh', 'w') as f:
  f.write('import com.openkm.api.*;'+n)
  for i in range(len(user_id)):
    id,pw,em,nm=user_id[i],user_pw[i],user_em[i],user_nm[i]
    f.write(user[0]+id+pw+em+nm+user[1])
with open('asgroles.bsh', 'w') as f:
  f.write('import com.openkm.api.*;'+n)
  for i in range(len(user_id)):
    id=user_id[i]
#    if id=='3886' or id=='6790':continue
    f.write(role[0]+id+q+'ROLE_USER'+q+role[1])
with open('del_users.bsh', 'w') as f:
  f.write('import com.openkm.api.*;'+n)
  for i in range(len(user_id)):
    id=user_id[i][:-1]
    f.write(delu[0]+id+delu[1])
注意：目前尚未找到是否有”createRole指令，因此如果要新增角色或群組，可能還是必須手動新增，再由程式指定。
(三)	執行批次檔
在「管理面板」開啟scripting，將程式檔Load進來，或者是直接選取、複製貼在黃色記事板上，按下「Evaluate」即執行。若無錯誤訊息，且顯示執行時間，則為成功。
(四)	驗證執行結果
開啟Users檢視是否如預期新增使用者並完成角色指定。
五、	批次上、下載
OpenKM的批次上、下載只開放在「管理面板」，因此一般使用者是無法使用的。而OpenKM並不是一般的檔案系統，因此也無法以檔案總管、OS等外掛方式來設定。上載(import)畫面如下，上載也類似，只是順序不同。
 
(一)	OpenKM一般進、出目錄是按左邊的目錄名稱，確定要上、下載(Select)是按右側的綠色勾。
(二)	由於程式限制，目前版本是不會辨認中文目錄的。因此不論是來源或者是目標目錄名稱，都必須先修改成英數文字才能辨識。上、下載後再恢復中文目錄名稱。
(三)	批次上、下載是經由localhost的作業系統連結到檔案系統，因此檔案目錄必須是在sino4上，或者是sino4可以連結到的位置。由於sino4檔案系統與公司其他系統之間是存在界面的，傳檔的方案有：
1.	window系統經由sftp與sino4進行檔案上、下載到openkm使用者目錄下，或者其他公共空間(目前在sino4:/home下的公共空間有aermod、backup、camxruns、cybee、py_exam等)，要注意OpenKM的權限範圍是使用者openkm範圍，不能存取其他私人目錄。
2.	先建立SAMBA由window系統複製到工作站(master)，sino4再經由/autofs/master來抓取資料。由於autofs的特性是動態連結，須先以openkm身份在sino4上存取/autofs/master內容，系統才知道有哪些目錄，才會在OpenKM系統中顯示。
六、	okmdb之外部存取
OpenKM基本上是以一個mysql的資料庫(okmdb)為核心在運作，其動態資料內容則是另存在/var/lib/mysql/ibdata1及$TOMCAT_HOME/repository下，因此只要service tomcat啟動，任何時間讀取其資料庫，只有讀取的權限，如果要寫入必須在OpenKM系統內寫入。
能夠存取mysql資料庫的方式有很多，直接以mysql程式讀取，其指令如網友介紹 ，或其他第三方軟體。以下介紹python2的MYSQLdb模組。程式如下：
kuang@sino4 ~/MyPrograms/openkm
$ cat rd_okmdb.py
import MySQLdb
from pandas import *
db = MySQLdb.connect(host="localhost", user="kuang", passwd="****", db="okmdb", charset='utf8',port=8080,unix_socket="/var/lib/mysql/mysql.sock" )
cursor = db.cursor()
cursor.execute("SELECT * from OKM_ACTIVITY")
data = cursor.fetchall()
cursor.execute("describe OKM_ACTIVITY")
cols = cursor.fetchall()
cols=[cols[i][0] for i in xrange(len(cols))]
dd={}
for i in xrange(len(cols)):
    dd.update({cols[i]:[data[j][i] for j in xrange(len(data))]})
df=DataFrame(dd)
pivot_table(df.loc[df.ACT_ACTION=='LOGIN'],index='ACT_USER',values='ACT_ACTION',aggfunc='count').reset_index().sort_values('ACT_ACTION',ascending=False).reset_index(drop=True)
pivot_table(df.loc[df.ACT_ACTION.map(lambda x:'DOCUMENT' in x)],index='ACT_PATH', values='dum',aggfunc='count').reset_index().sort_values('dum',ascending=False).reset_index(drop=True).head(10)
(一)	MySQLdb的安裝 ：如果pip不能成功，可以嘗試conda install。MySQLdb模組的使用方式 。
(二)	db之連結
如果沒有特別指定，port會選3306，而socket會設在/temp目錄下。由於okmdb有自己的設定方式，不是內設位置，因此必須要按照okmdb的內容來連結。
(三)	cursor：類似DOS的prompt(c:/>)概念，此處稱之為cursor(mysql>)。括弧內的命令即為一般mysql指令。
(四)	okmdb所有表格的項目，在okmdb目錄下(連原創者也無法讀取，須sudo ls /var/lib/mysql/okmdb)，由某個表中讀取內容，須先在mysql內SELECT，再將cursor的內容fetchall()出來。存成pandas dataframe形式。
(五)	執行pivot_table
範例中將印出登入最多之使用者，以及最熱門檔案。
   ACT_USER  ACT_ACTION
0     kuang          43
1      4294          14
2  okmAdmin          10
3      6729           5
4      4935           3
5     penny           2
6      3886           1
7      6790           1
   dum                                          ACT_PATH
0   41                 /okm:personal/kuang/筆記/python.doc
1   22                  /okm:personal/kuang/筆記/smoke.doc
2   17          /okm:root/有關OpenKM/OpenKM User Guide.pdf
3   16                /okm:root/有關OpenKM/okm-6.3-com.pdf
4   11                   /okm:personal/4294/addusers.bsh
5   10         /okm:root/空氣污染防制及健康風險/1215C_期末報告chap5.doc
6   10     /okm:personal/kuang/使用手冊/docs.openkm.com.html
7    9   /okm:personal/kuang/使用手冊/098FY005515002-001.pdf
8    9  /okm:personal/kuang/使用手冊/CALPUFF5_UsersGuide.pdf
9    9        /okm:root/人員培訓心得報告/2018歐洲能資源循環利用考察心得報告.pdf

(六)	執行Pyforms-web程式：Okmdb分析結果之網路展示
Pyforms-web網路伺服器(runserver)基本上是使用者觸發之執行程式，而該網頁並沒有使用者的篩選、是(內部)公開的資訊彙集處。為避免過度執行okmdb的讀取及分析，因此藉由crontab定期(上班時間之各小時)來進行統計分析並產生分析結果表(設定詳下述)，然後使用者透過pyforms程式來讀取，以一定期更新的方式進行。
執行結果如圖所示：目前設定了6個分頁，採用了pyforms-web /orquistra範例模板，各分頁分別是檔案時間(AnalysisTime)、最大檔案目錄(LargesPath)、最常登入技術組(MostFreqDivisons)、最受歡迎文件(MostFreqGets)、最常登入群組(MostFreqGroups)、以及最常登入使用者(MostFreqUsers)。
由於模板範例是文字條列，pyforms的文字並不能使用html上的設定，而必須另外使用ControlList方法來做：
    self._tableGet   = ControlList(
            '檔案',
            horizontal_headers=['no','開啟次數','檔案'],
            select_entire_row=True,
            readonly=True,
        )
    self._tableGet.value = [l.split() for l in lines[-10:]]
    self.formset = [
      { ...,
        'MostFreqGets': [segment('_tableGet')], ...
 
七、	OpenKM的定期作業
(一)	mysql的備份
必須使用mysqldump指令，才可以在沒有停下mysql服務的情況下，完整備份運作中的資料庫。
cd /home/openkm/tomcat/mysql_okmdb
mysqldump --user=root --password='sino2019' okmdb > \ /home/openkm/tomcat/mysql_okmdb/okmdb.sql
自動執行方式採用/etc/crontab設定進行。
(二)	tomcat之備份
tomcat者設定、repository的內容、以及logs檔案，因為隨時在變動中，必須在深夜沒有增加檔案時，進行備份。備份方式採crontab設定rsync指令進行。
rsync -a /home/openkm/tomcat/* /autofs/master/openkm/tomcat_sino4
（-a：封裝備份模式，相當於 -rlptgoD，遞迴備份所有子目錄下的目錄與檔案，保留連結檔、檔案的擁有者、群組、權限以及時間戳記 。）
由於自動化備份不能輸入密碼，因此使用者openkm必須在sino4與master之間設成免密登入，透過autofs的設定，就可以定期備份了。
重建系統之後，可以運用mysql（mysql -u root -p database_name < backup.sql）和rsync指令（對調來源與目的位置）來回復檔案及設定即可。
(三)	上班天/時間okmdb的讀取及分析(sino4:/etc/crontab設定每小時執行)
$ cat /home/kuang/MyPrograms/openkm/rd_okmdb.bsh
DOW=$(date +%u)
H=$(date +%H)
if [ $DOW -gt 0 ] && [ $DOW -le 5 ];then
  if [ $H -ge 8 ] && [ $H -le 17 ];then
    cd /home/kuang/MyPrograms/openkm
    rm -f rd_okmdb.txt
    LC_ALL="zh_TW.UTF-8" ./rd_okmdb.py >rd_okmdb.txt
    if [ $H -eq 17 ];then
      ymd=`date  --rfc-3339='date'`
      cp rd_okmdb.txt rd_okmdb.txt_$ymd
    fi
  fi
fi
(四)	定時批次作業(cron table)
一如linux的crontable，OpenKM程式內也有crontable，可以每小時(@hourly)、每天(@daily)、每週(@weekly)、crontab的內容可以參考官網設定與範例 ，以下為bean shell每天執行du的範例。
[openkm@sino4 rd_openkm.log]$ cat du.bsh
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.openkm.api.*;
import com.openkm.bean.*;
import com.openkm.util.*;

Logger log = LoggerFactory.getLogger("com.openkm.scripting.du");
int MAX_DEPTH = Integer.MAX_VALUE;

void nodeTask(String path, int depth) throws Exception {
    for (Folder fld : OKMFolder.getInstance().getChildren(null, path)) {
        ContentInfo ci = OKMFolder.getInstance().getContentInfo(null, fld.getPath() );
        log.info(FormatUtil.formatSize(ci.getSize()) + '\t' + fld.getPath());

        if (depth < MAX_DEPTH) {
            nodeTask(fld.getPath(), depth + 1);
        }
    }}

log.info("***** DU BEGIN *****");
nodeTask("/okm:root", 0);
log.info("***** DU END *****");
crontab設成每天執行，其結果將會出現在$TOMCAT/logs/openkm.log檔案內，marker會是日期及com.openkm.scripting.du。因此只要在逐時python程式內讀取openkm.log內容(結果為du.csv)貼在網頁即可。
[openkm@sino4 rd_openkm.log]$ cat rd_log.py
#!python 3
from pandas import *
import subprocess
logP='/home/openkm/tomcat/logs/'
log=logP+'openkm.log'
cmd='date  --rfc-3339="date"'
today=subprocess.check_output(cmd,shell=True).strip(b'\n').decode("utf-8")
du_mark='com.openkm.scripting.du'
cmd='grep '+today+' '+log+'|grep '+du_mark+'|grep -v " DU "'
lis=subprocess.check_output(cmd,shell=True).split(b'\n')
a=' - '
i=lis[0].decode("utf-8").index(a)+3
lis=[j[i:].decode("utf-8").split('\t') for j in lis if len(j)>0]
size=[lis[i][0] for i in range(len(lis))]
path=[lis[i][1] for i in range(len(lis))]
df=DataFrame({'size':size,'path':path})
df['level']=[a.count('/') for a in df.path]
kk={'GB':1000000000,'MB':1000000,'KB':1000,'B':1}
df['num']=[float(a.split()[0])*kk[a.split()[1]] for a in df['size']]
df=df.sort_values(['level','num'], ascending=[True, False]).reset_index(drop=True)
del df['num']
df.set_index('level').to_csv(logP+'du.csv')

 
A.2	Glossary
APIs	Application Programming Interface
COM	Component Object Model
GDI	Graphical Data Interface
GUI	Graphical User Interface
GUIDs	globally unique identifiers
ODBC	Open Database Connectivity
OLE	Object Linking and Embedding
MDI	Multiple Document Interface
MFC	Microsoft Foundation Class Library
SDI	Single Document Interface
SDK	Software Development Kit
TLB	type library file

 
附錄A參考文獻與資料來源
